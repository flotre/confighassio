# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123

# Text to speech
tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml

logger:
  default: info
  logs:
    homeassistant.components.mqtt: info
    custom_components.generic_smart_thermostat.climate: info
    zigpy: info
    zigpy_znp: info
    zhaquirks: info

schedule_list:

webhook:

# Example configuration.yaml entry
notify:
  - name: email
    platform: smtp
    server: smtp.gmail.com
    port: 587
    timeout: 15
    sender: !secret florent_email
    encryption: starttls
    username: !secret florent_email
    password: !secret gmail_password
    recipient:
      - !secret florent_email
      - !secret alice_email
    sender_name: My Home Assistant

# Exposes service shell_command.save_config
shell_command:
  save_config: git commit -a -m "auto backup"; git push

input_boolean:
  virtual_chauffage_antoine:
    name: Etat souhaite du chauffage
    icon: mdi:radiator

climate:
  - platform: generic_smart_thermostat
    name: Salon
    heater: switch.chauffage_salon_switch
    in_temp_sensor: sensor.lumi_lumi_weather_88e47101_temperature
    out_temp_sensor: sensor.temperature_exterieur
    use_schedule_list: true
    preheat: true
    calculate_period: 60

  - platform: generic_smart_thermostat
    name: Entrée
    heater: switch.radiateur_entree
    in_temp_sensor: sensor.lumi_lumi_weather_f758f501_temperature
    out_temp_sensor: sensor.temperature_exterieur
    use_schedule_list: true
    preheat: true
    calculate_period: 60

  - platform: generic_smart_thermostat
    name: Cuisine
    heater: switch.radiateur_cuisine
    in_temp_sensor: sensor.lumi_lumi_weather_6438fa01_temperature
    out_temp_sensor: sensor.temperature_exterieur
    use_schedule_list: true
    preheat: true
    calculate_period: 60

  - platform: generic_smart_thermostat
    name: Salle deau
    heater: input_boolean.chauffage_sde_temperature
    in_temp_sensor: sensor.lumi_lumi_weather_7ce37101_temperature
    out_temp_sensor: sensor.temperature_exterieur
    confort_temp: 22
    use_schedule_list: true
    preheat: true

  - platform: generic_smart_thermostat
    name: Chambre bas
    heater: switch.radiateur_chambre_bas
    in_temp_sensor: sensor.lumi_lumi_weather_dc820102_temperature
    out_temp_sensor: sensor.temperature_exterieur
    use_schedule_list: true
    preheat: true
    calculate_period: 30
    confort_temp: 19

sensor:
  # capteur consommation maison
  - platform: serial
    name: Home meter
    serial_port: /dev/ttyACM0
    baudrate: 115200
  # history chauffage salon
  - platform: history_stats
    name: Radiateur salon total ON
    entity_id: switch.chauffage_salon_switch
    state: "on"
    type: time
    start: "{{ 0 }}"
    end: "{{ now() }}"

  - platform: history_stats
    name: Radiateur cuisine total ON
    entity_id: switch.radiateur_cuisine
    state: "on"
    type: time
    start: "{{ 0 }}"
    end: "{{ now() }}"

  - platform: history_stats
    name: Radiateur entrée total ON
    entity_id: switch.radiateur_entree
    state: "on"
    type: time
    start: "{{ 0 }}"
    end: "{{ now() }}"

  - platform: history_stats
    name: Radiateur chambre Antoine total ON
    entity_id: switch.radiateur_chambre_antoine
    state: "on"
    type: time
    start: "{{ 0 }}"
    end: "{{ now() }}"

  - platform: history_stats
    name: Radiateur chambre bas total ON
    entity_id: switch.radiateur_chambre_bas
    state: "on"
    type: time
    start: "{{ 0 }}"
    end: "{{ now() }}"

  - platform: integration
    name: energie injectee
    source: sensor.puissance_injectee
    unit_time: h
    round: 0
    method: left

  - platform: integration
    name: energie solaire consommee
    source: sensor.puissance_solaire_consommee
    unit_time: h
    round: 0
    method: left

switch:
  - platform: template
    switches:
      chauffage_salon_switch:
        value_template: "{{ is_state('light.chauffage_salon_light', 'off') }}"
        turn_on:
          service: light.turn_off
          entity_id: light.chauffage_salon_light
        turn_off:
          service: light.turn_on
          entity_id: light.chauffage_salon_light

template:
  - sensor:
      - name: Total energie radiateur salon
        device_class: energy
        state_class: total_increasing
        unit_of_measurement: kWh
        state: "{{2*float(states('sensor.radiateur_salon_total_on'))}}"
      - name: Total energie radiateur cuisine
        device_class: energy
        state_class: total_increasing
        unit_of_measurement: kWh
        state: "{{float(states('sensor.radiateur_cuisine_total_on'))}}"
      - name: Total energie radiateur entrée
        device_class: energy
        state_class: total_increasing
        unit_of_measurement: kWh
        state: "{{float(states('sensor.radiateur_entree_total_on'))}}"
      - name: Total energie radiateur chambre bas
        device_class: energy
        state_class: total_increasing
        unit_of_measurement: kWh
        state: "{{float(states('sensor.radiateur_chambre_bas_total_on'))}}"
      - name: Total energie radiateur chambre antoine
        device_class: energy
        state_class: total_increasing
        unit_of_measurement: kWh
        state: "{{3*float(0.378)*float(states('sensor.radiateur_chambre_antoine_total_on'))}}"
      - name: Production solaire instantannée
        device_class: power
        unit_of_measurement: W
        state: >
          {%if 5000 < float(states('sensor.tp_link_smart_plug_61cc_current_consumption')) %}
            {{float(283230)-float(states('sensor.tp_link_smart_plug_61cc_current_consumption'))}}
          {% else %}
            {{float(0)}}
          {% endif %}
      - name: Tension maison
        unit_of_measurement: V
        state: "{{ state_attr('sensor.home_meter', 'V') }}"
        device_class: voltage
      - name: Fréquence maison
        unit_of_measurement: Hz
        state: "{{ state_attr('sensor.home_meter', 'F') }}"
        device_class: frequency
      - name: Courant maison
        unit_of_measurement: A
        state: "{{ state_attr('sensor.home_meter', 'I2') }}"
        icon: mdi:current-ac
        device_class: current
      - name: Puissance maison
        unit_of_measurement: W
        device_class: power
        state: "{{ state_attr('sensor.home_meter', 'P2') }}"
      - name: Energie maison
        unit_of_measurement: Wh
        device_class: energy
        state_class: total_increasing
        state: "{{ state_attr('sensor.home_meter', 'E2') }}"
      - name: Puissance injectee
        device_class: power
        unit_of_measurement: W
        state: >
          {% if state_attr('sensor.home_meter', 'P2') < 0 %}
            {{ -state_attr('sensor.home_meter', 'P2')}}
          {% else %}
            0
          {% endif %}
      - name: Puissance solaire consommee
        device_class: power
        unit_of_measurement: W
        state: >
          {% if state_attr('sensor.home_meter', 'P2') > 0 %}
            {{ states('sensor.production_solaire_instantannee') }}
          {% else %}
            {{ float(states('sensor.production_solaire_instantannee')) + state_attr('sensor.home_meter', 'P2') }}
          {% endif %}

generic_hygrostat:
  - name: Salle eau
    humidifier: input_boolean.chauffage_sde_humidite
    target_sensor: sensor.lumi_lumi_weather_7ce37101_humidity
    target_humidity: 60
    device_class: "dehumidifier"
    min_cycle_duration:
      minutes: 30
    keep_alive:
      minutes: 15
    sensor_stale_duration:
      hours: 1
