
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123

# Text to speech
tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml

logger:
  default: info
  logs:
    homeassistant.components.mqtt: info
    custom_components.generic_smart_thermostat.climate: debug


schedule_list:

freebox:
  host: f85359wf.fbxos.fr
  port: 33333

webhook:


# Example configuration.yaml entry
notify:
  - name: email
    platform: smtp
    server: smtp.gmail.com
    port: 587
    timeout: 15
    sender: !secret florent_email
    encryption: starttls
    username: !secret florent_email
    password: !secret gmail_password
    recipient:
      - !secret florent_email
      - !secret alice_email
    sender_name: My Home Assistant

# Exposes service shell_command.save_config
shell_command:
  save_config: git commit -a -m "auto backup"; git push



sensor:
  - platform: template
    sensors:
      tp_link_smart_plug_61cc_current:
        friendly_name_template: "{{ state_attr('switch.tp_link_smart_plug_61cc', 'friendly_name')}} Current"
        value_template: "{{ state_attr('switch.tp_link_smart_plug_61cc', 'current_a') | float }}"
        unit_of_measurement: 'A'
      tp_link_smart_plug_61cc_watts:
        friendly_name_template: "{{ state_attr('switch.tp_link_smart_plug_61cc','friendly_name')}} Current Consumption"
        value_template: "{{ state_attr('switch.tp_link_smart_plug_61cc', 'current_power_w') | float }}"
        unit_of_measurement: 'W'
      buanderie_total_kwh:
        friendly_name_template: "Total consommation buanderie"
        value_template: "{{ state_attr('switch.tp_link_smart_plug_61cc', 'total_energy_kwh') | float }}"
        unit_of_measurement: 'kwh'
      low_battery:
        friendly_name: "Low Battery"
        unit_of_measurement: entities
        value_template: >
          {%- set threshold = 5 -%}
          {% set count = namespace(value=0) %}
          {%- set domains = ['light', 'switch', 'sensor', 'zwave', 'lock'] -%}
          {%- for domain in domains -%}
          {%- for item in states[domain] if ((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) ) -%}
               {%- set count.value = count.value + 1 -%}
          {%- endfor -%}
          {%- endfor -%}
          {{ count.value }}
        attribute_templates:
          entities: >
            {%- set threshold = 5 -%}
            {%- set domains = ['light', 'switch', 'sensor', 'zwave', 'lock'] -%}
            {%- for domain in domains -%}
            {%- for item in states[domain] if ((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) ) -%}
                 {{ item.attributes.friendly_name }}{%- if not loop.last %}, {% endif -%}
            {%- endfor -%}
            {%- endfor -%}
      unavailable_entities:
        friendly_name: Unavailable Entities
        unit_of_measurement: entities
        icon_template: "{{ 'mdi:check-circle' if is_state('sensor.unavailable_entities','0') else 'mdi:alert-circle' }}"
        value_template: >
          {{ states|selectattr('state','in',['unavailable','unknown','none'])|rejectattr('domain','eq','group')
            |rejectattr('entity_id','in',state_attr('group.ignored_entities','entity_id'))|list|count }}
        attribute_templates:
          entities: >
            {{ states|selectattr('state','in',['unavailable','unknown','none'])|rejectattr('domain','eq','group')
              |rejectattr('entity_id','in',state_attr('group.ignored_entities','entity_id'))|map(attribute='entity_id')|join(',') }}

## REQUIRED add any entities you do not want to monitor in this group.
## This group MUST exist even if is empty for sensor template to render.
group:
  ignored_entities:
    entities:
      - binary_sensor.updater
      - media_player.nexus_player_2
    
input_boolean:
  virtual_chauffage_antoine:
    name: Etat souhaite du chauffage
    icon: mdi:radiator



climate:
  - platform: generic_smart_thermostat
    name: Salon
    heater: switch.radiateur_salon
    in_temp_sensor: sensor.lumi_lumi_weather_88e47101_temperature
    out_temp_sensor: sensor.temperature_exterieur
    use_schedule_list: true
    preheat: true
    calculate_period: 60
    
  - platform: generic_smart_thermostat
    name: Entr√©e
    heater: switch.radiateur_entree
    in_temp_sensor: sensor.lumi_lumi_weather_f758f501_temperature
    out_temp_sensor: sensor.temperature_exterieur
    use_schedule_list: true
    preheat: true
    calculate_period: 60

  - platform: generic_smart_thermostat
    name: Cuisine
    heater: switch.radiateur_cuisine
    in_temp_sensor: sensor.lumi_lumi_weather_6438fa01_temperature
    out_temp_sensor: sensor.temperature_exterieur
    use_schedule_list: true
    preheat: true
    calculate_period: 60
    
  - platform: generic_smart_thermostat
    name: Salle deau
    heater: switch.radiateur_sde
    in_temp_sensor: sensor.lumi_lumi_weather_7ce37101_temperature
    out_temp_sensor: sensor.temperature_exterieur
    confort_temp: 22
    use_schedule_list: true
    preheat: true

  - platform: generic_smart_thermostat
    name: Chambre Antoine
    heater: input_boolean.virtual_chauffage_antoine
    in_temp_sensor: sensor.lumi_lumi_weather_7a870102_weather_chambre_antoine
    out_temp_sensor: sensor.temperature_exterieur
    use_schedule_list: true
    preheat: true
    calculate_period: 30
    confort_temp: 19
  
  - platform: generic_smart_thermostat
    name: Chambre bas
    heater: switch.radiateur_chambre_bas
    in_temp_sensor: sensor.lumi_lumi_weather_dc820102_temperature
    out_temp_sensor: sensor.temperature_exterieur
    use_schedule_list: true
    preheat: true
    calculate_period: 30
    confort_temp: 19
    